<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton - http://www.bigbluebutton.org
  
  Copyright (c) 2008-2009 by respective authors (see below). All rights reserved.
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 3 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, If not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
--> 

<viewer:MDIWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:viewer="flexlib.mdi.containers.*" 
	implements="org.bigbluebutton.common.IBbbModuleWindow">

    <mx:Script>
        <![CDATA[
        	import org.bigbluebutton.modules.viewers.view.events.ChangeStatusEvent;
        	import org.bigbluebutton.modules.viewers.ViewersModuleConstants;
        	import mx.events.ListEvent;
        	import org.bigbluebutton.modules.viewers.view.events.AssignPresenterEvent;
        	import org.bigbluebutton.modules.viewers.view.components.Images;
        	import org.bigbluebutton.modules.viewers.view.ViewersWindowMediator;
        	import mx.collections.ArrayCollection;
		
			public static const TITLE:String = "Viewers";
			
			[Bindable]
			public var participants:ArrayCollection;
  			
  			[Bindable]
  			public var isModerator:Boolean = false;
  			
          	public var images:Images = new Images();
                      
   			[Bindable]
   			public var presenterIcon : Class = images.presenter;
   			[Bindable] 
   			public var handIcon:Class = images.raisehand;
   			
   			[Bindable] 
   			public var toggleTooltip : String = "Click to raise hand.";
   			
			private var _xPosition:int;
			private var _yPosition:int;
			
			public function get xPosition():int {
				return _xPosition;
			}
			
			public function get yPosition():int {
				return _yPosition;
			}
			
			public function set xPosition(x:int):void {
				_xPosition = x;
			}
			
			public function set yPosition(y:int):void {
				_yPosition = y;
			}
								
			public function changeStatus(status:ArrayCollection):void {
				dispatchEvent(new ChangeStatusEvent(status));
			}
				
			private function viewerSelectEvent(event:ListEvent):void {
	            dispatchEvent(new Event(ViewersModuleConstants.VIEWER_SELECTED_EVENT));
        	}           
        ]]>
    </mx:Script>

    <mx:DataGrid id="viewersGrid" dataProvider="{participants}" editable="false" 
    	dragEnabled="false" itemClick="viewerSelectEvent(event);" width="100%" height="100%">
    	<mx:columns>
    		<mx:DataGridColumn dataField="role" headerText="Role" dataTipField="Role" editable="false" width="35"
    			itemRenderer="org.bigbluebutton.modules.viewers.view.components.RoleItemRenderer" sortable="false"/>
    		<mx:DataGridColumn dataField="name" headerText="Name" editable="true" width="100" sortable="false"
    			itemRenderer="org.bigbluebutton.modules.viewers.view.components.NameItemRenderer"/>
    		<mx:DataGridColumn dataField="status" headerText="Status" sortable="false"
    			itemRenderer="org.bigbluebutton.modules.viewers.view.components.StatusItemRenderer"/>
    	</mx:columns>
    </mx:DataGrid>
    
   <mx:ControlBar width="100%"> 
   		 <mx:Button id="presentBtn" icon="{presenterIcon}" visible="{isModerator}" enabled="{viewersGrid.selectedItem != null}"
    	   			width="20" height="20"
    	   			toolTip="Select web participant to be presenter." click="dispatchEvent(new AssignPresenterEvent(viewersGrid.selectedItem.userid, viewersGrid.selectedItem.name))"/>
     	 <mx:Spacer width="100%"/>
    	 <mx:Button id="raiseHandImage" icon="{handIcon}" toggle="true" 
    	   			width="20" height="20"
    	   			toolTip="{toggleTooltip}" click="dispatchEvent(new Event(ViewersWindowMediator.CHANGE_STATUS))"/>  			
    </mx:ControlBar>  
</viewer:MDIWindow>
