<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app PUBLIC
	"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
	"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

	<display-name>Bigbluebutton Servlet</display-name>
	<description>Bigbluebutton application</description>

	<!--
	  - Key of the system property that should specify the root directory of this
	  - web app. Applied by WebAppRootListener or Log4jConfigListener.
	  -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>bigbluebutton.root</param-value>
	</context-param>

	<!--
	  - Location of the Log4J config file, for initialization and refresh checks.
	  - Applied by Log4jConfigListener.
	  -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/log4j.properties</param-value>
	</context-param>

	<!--
	  - Location of the XML file that defines the root application context.
	  - Applied by ContextLoaderServlet.
		-
		- Can include "/WEB-INF/schedulingContext-quartz.xml" for Quartz scheduling,
		- or "/WEB-INF/schedulingContext-timer.xml" for Timer scheduling.
	  -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/applicationContext.xml
		</param-value>
		<!--
		<param-value>
			/WEB-INF/applicationContext.xml  /WEB-INF/schedulingContext-timer.xml
			/WEB-INF/schedulingContext-quartz.xml
		</param-value>
		-->
	</context-param>

	<!--
	  - Configures Log4J for this web app.
	  - As this context specifies a context-param "log4jConfigLocation", its file path
	  - is used to load the Log4J configuration, including periodic refresh checks.
	  -
	  - Would fall back to default Log4J initialization (non-refreshing) if no special
	  - context-params are given.
	  -
	  - Exports a "web app root key", i.e. a system property that specifies the root
	  - directory of this web app, for usage in log file paths.
	  - This web app specifies "fileupload.root" (see log4j.properties file).
	  -->
	<!-- Leave the listener commented-out if using JBoss -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!--
	  - Loads the root application context of this web app at startup,
	  - by default from "/WEB-INF/applicationContext.xml".
		- Note that you need to fall back to Spring's ContextLoaderServlet for
		- J2EE servers that do not follow the Servlet 2.4 initialization order.
		-
	  - Use WebApplicationContextUtils.getWebApplicationContext(servletContext)
	  - to access it anywhere in the web application, outside of the framework.
	  -
	  - The root context is the parent of all servlet-specific contexts.
	  - This means that its beans are automatically available in these child contexts,
	  - both for getBean(name) calls and (external) bean references.
	  -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!--
	  - Spring web MVC servlet that dispatches request to registered handlers.
	  - Has its own application context, by default defined in "{servlet-name}-servlet.xml",
	  - i.e. "image-servlet.xml" in this case.
	  -
	  - A web app can contain any number of such servlets.
	  - Note that this web app has a shared root application context, serving as parent
	  - of all DispatcherServlet contexts.
	  -->
	<servlet>
		<servlet-name>bigbluebutton</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>
    <!--<servlet>
           <servlet-name>dwr-invoker</servlet-name>
           <display-name>DWR Servlet</display-name>
           <servlet-class>uk.ltd.getahead.dwr.DWRServlet</servlet-class>
           <init-param>
                <param-name>debug</param-name>
                <param-value>true</param-value>
           </init-param>
   </servlet>-->
   <servlet>
       <servlet-name>dwr-invoker</servlet-name>
       <servlet-class>org.directwebremoting.servlet.DwrServlet</servlet-class>
       <init-param>
           <param-name>activeReverseAjaxEnabled</param-name>
           <param-value>true</param-value>
         </init-param>
         <init-param>  
           <param-name>org.directwebremoting.extend.ServerLoadMonitor</param-name>
           <param-value>org.directwebremoting.impl.PollingServerLoadMonitor</param-value>
           </init-param>
           <init-param>
           <param-name>timeToNextPoll</param-name>
           <param-value>1000</param-value>
           </init-param>
           <init-param>
           <param-name>debug</param-name>
           <param-value>true</param-value>
       </init-param>
   </servlet>
	<!--
		- Dispatcher servlet mapping for the web user interface,
		- refering to the "image" servlet above.
		-->
	<servlet-mapping>
		<servlet-name>bigbluebutton</servlet-name>
		<url-pattern>/file/*</url-pattern>
	</servlet-mapping>
    <servlet-mapping>
          <servlet-name>dwr-invoker</servlet-name>
          <url-pattern>/dwr/*</url-pattern>
    </servlet-mapping>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

</web-app>
