<?xml version="1.0" encoding="utf-8"?>
<MDIWindow xmlns="flexlib.mdi.containers.*" 
	       xmlns:mx="http://www.adobe.com/2006/mxml" 
	       width="300" height="300" showCloseButton="false"
	       click="setFocusOn(this.txtMsg || this.txtChatBox)"
	       focusEnd="setFocusOff()">

	<mx:Script>
		<![CDATA[
			import mx.events.MenuEvent;
			import mx.controls.Menu;
			import mx.utils.ColorUtil;
			import org.bigbluebutton.modules.chat.model.vo.MessageVO;
			import org.bigbluebutton.modules.chat.view.ChatWindowMediator;
			import org.bigbluebutton.modules.chat.model.vo.*;
			import mx.core.UIComponent;

		
			public static const TITLE:String = "Public Chat";
			private var sizeM:Menu;		
			public var m:MessageObject;
			[Bindable]
			public var messageVO:MessageVO = new MessageVO();
			
			public function showNewMessage(rm : MessageObject):void
			{
			var newMessage:String;
			newMessage = "<font color=\"#" + rm.color.toString(16) + "\"><b>[" + 
						rm.getUserid() +" @ "+ time()+ "]</b> " + rm.message + "</font>";
			txtChatBox.htmlText += newMessage + "\n";
			}
			public function setFocusOn(component:UIComponent):void
			{
				if (component.id == "txtMsg") {
				component.setFocus();
                component.drawFocus(true);
    			}
    			else
    			{
    				this.txtMsg.setFocus();
    				this.txtMsg.drawFocus(true);
    			}
				//this.txtMsg.focusManager.showFocusIndicator = true;
			}
			public function setFocusOff():void
			{
				//this.txtMsg.setFocus();
				//this.txtMsg.cursorManager.hideCursor();
				this.txtMsg.drawFocus(false);
				
				//this.txtMsg.cursorManager.removeAllCursors();
			}

		    public function sendMessages():void
		    {
		   	if (txtMsg.text.length > 4000)
		   	{
		   		txtChatBox.htmlText += "Your message is too long!" + 
		   			" There is a limit of maximum 4000 character per message." + "\n";
		   		return;
		   	} 
		   			
		   	else if (txtMsg.text != ""){
		   	this.m = new MessageObject(txtMsg.text, cmpColorPicker.selectedColor);
		   	dispatchEvent(new Event(ChatWindowMediator.NEW_MESSAGE));}
		   	txtMsg.text = "";
		    }
		   
            private function updateScroll():void
            {
            	txtChatBox.verticalScrollPosition = txtChatBox.maxVerticalScrollPosition;
            }
            private function time() : String
			{
			var date:Date = new Date();
			var t:String = date.toLocaleTimeString();
			//var d:String = date.toLocaleDateString();
			return t;
			}
		]]>
	</mx:Script>
	
	<mx:TextArea id="txtChatBox" editable="false" width="100%" height="100%" focusEnabled="false" updateComplete="updateScroll()"/>
		
	<mx:ApplicationControlBar width="100%" height="10%">
		
				<mx:TextInput id="txtMsg" width="100%" enter="sendMessages()"/>
				<mx:ColorPicker id="cmpColorPicker" showTextField="false" toolTip="Text Color" selectedColor="0x000000"/>
				<mx:Button label="Send" id="send" toolTip="Send Message" click="sendMessages()"/>
		
	    
	</mx:ApplicationControlBar>
</MDIWindow>
