<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton - http://www.bigbluebutton.org
  
  Copyright (c) 2008-2009 by respective authors (see below). All rights reserved.
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 3 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, If not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
--> 

<MDIWindow xmlns="flexlib.mdi.containers.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="700" height="100" title="Playback..."
    creationComplete="init()" resizable="true">
	
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import org.bigbluebutton.modules.playback.PlaybackFacade;
			import mx.events.MenuEvent;
			import mx.collections.XMLListCollection;
			[Bindable]
			public var menuBarCollection:XMLListCollection;
			
			public static const LOAD_RECORDING:String = "Load Recording";
			public static const LOAD_FROM_SERVER:String = "Load from server";
			public static const LOAD_LOCAL:String = "Load Local";
			public static const PLAYBACK:String = "Playback";
			public static const RECORDING:String = "Recording";
			public static const START_RECORDING:String = "Start Recording";
			public static const STOP_RECORDING:String = "Stop Recording";
			
			//The following code block is to deal with a bug in FLexLib with MDI windows not responding well to being maximized
			private var savedWindowWidth:Number;
			private var savedWindowHeight:Number;
			private var savedX:Number;
			private var savedY:Number;
			private var isMaximized:Boolean = false;
			override public function maximize():void{
				if (!isMaximized){
					savedWindowHeight = this.height;
					savedWindowWidth = this.width;
					savedX = this.x;
					savedY = this.y;
                	dispatchEvent(new MDIWindowEvent(MDIWindowEvent.MAXIMIZE, this));
                	isMaximized = true;
				} else{
					this.width = savedWindowWidth;
					this.height = savedWindowHeight;
					this.x = savedX;
					this.y = savedY;
					isMaximized = false;
					//dispatchEvent(new MDIWindowEvent(MDIWindowEvent.RESTORE, this));
				}	
			}
			
			private var menubarXML:XMLList =
                <>
                    <menuitem label= {LOAD_RECORDING}>
                        <menuitem label={LOAD_FROM_SERVER}/>
                        <menuitem label={LOAD_LOCAL} /> 
                    </menuitem>
                    <menuitem label= {PLAYBACK}>
                    	<menuitem label= {PlaybackFacade.PLAY} />
                    	<menuitem label= {PlaybackFacade.STOP} />
                    </menuitem>
                    <menuitem label= {RECORDING}>
                    	<menuitem label= {START_RECORDING} />
                    	<menuitem label= {STOP_RECORDING} />
                    </menuitem>
                </>;
			
			public function init():void{
				menuBarCollection = new XMLListCollection(menubarXML);
			}
			
			public function menuHandler(e:MenuEvent):void{
				//Alert.show(e.item.@label);
				var label:String = e.item.@label;
				switch(label){
					case LOAD_FROM_SERVER:
						dispatchEvent(new Event(LOAD_FROM_SERVER));
						break;
					case LOAD_LOCAL:
						dispatchEvent(new Event(LOAD_LOCAL));
						break;
					case PlaybackFacade.PLAY:
						dispatchEvent(new Event(PlaybackFacade.PLAY));
						break;
					case PlaybackFacade.STOP:
						dispatchEvent(new Event(PlaybackFacade.STOP));
						break;
					case START_RECORDING:
						dispatchEvent(new Event(START_RECORDING));
						break;
					case STOP_RECORDING:
						dispatchEvent(new Event(STOP_RECORDING));
						break;
				}
			}
			
		]]>
	</mx:Script>
	<mx:ApplicationControlBar top="0" left="0" dock="true" width="100%" height="30">
		<mx:MenuBar id="menuBar" width="100%" labelField="@label" height="20"
			dataProvider="{menuBarCollection}" itemClick="menuHandler(event)" x="0" y="0">
		</mx:MenuBar>
	</mx:ApplicationControlBar>
	
	<mx:TextArea id="txtOutput" width="100%" height="100%"/>
	
</MDIWindow>
