<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton - http://www.bigbluebutton.org
  
  Copyright (c) 2008-2009 by respective authors (see below). All rights reserved.
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 3 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, If not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
--> 

<mx:ApplicationControlBar xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:mate="http://mate.asfusion.com/"
	enabled="true" >   
	
	<mate:Listener type="{ToolbarButtonEvent.ADD}" method="handleAddToolbarButtonEvent" />	
	<mate:Listener type="{ToolbarButtonEvent.REMOVE}" method="handleRemoveToolbarButtonEvent"/>
	<mate:Listener type="EndMeetingKickAllEvent" method="handleEndMeetingEvent"/>
	<mate:Listener type="{ConfigurationEvent.CONFIG_EVENT}" method="handleConfigurationEvent"/>
	
	<mx:Script>
		<![CDATA[
			import org.bigbluebutton.main.events.ConfigurationEvent;
			import org.bigbluebutton.main.events.BBBEvent;
			import org.bigbluebutton.main.events.ToolbarButtonEvent;
			import mx.controls.Alert;
			import org.bigbluebutton.main.events.CloseWindowEvent;
			import org.bigbluebutton.main.MainApplicationConstants;
			import org.bigbluebutton.main.view.MainApplicationShellMediator;
			import org.bigbluebutton.util.i18n.ResourceUtil;

			private var DEFAULT_HELP_URL:String = "http://www.bigbluebutton.org/content/videos";
			
			public function loggedIn(name:String, room:String, role:String):void{
				this.visible = true;
			}
			
			public function addButton(name:String):Button{
				var btn:Button = new Button();
				btn.id = name;
				btn.label = name;
				btn.height = 20;
				btn.visible = true;
				this.addChild(btn);
				
				return btn;
			}
			
			private function handleConfigurationEvent(event:ConfigurationEvent):void {
				if (event.helpURL != null || event.helpURL != "")
					DEFAULT_HELP_URL = event.helpURL;
			}
			
			private function onHelpButtonClicked():void {
				navigateToURL(new URLRequest(DEFAULT_HELP_URL))
			}
			
			private function handleEndMeetingEvent(event:BBBEvent):void {
				doLogout();
			}
			
			private function doLogout():void {
				dispatchEvent(new Event(MainApplicationConstants.LOGOUT_EVENT));
			}
			
			private function handleAddToolbarButtonEvent(event:ToolbarButtonEvent):void {
				addedBtns.addChild(event.button);
			}
			
			private function handleRemoveToolbarButtonEvent(event:ToolbarButtonEvent):void {
				addedBtns.removeChild(event.button);
			}
			
		]]>
	</mx:Script>	
	<mx:HBox id="addedBtns">
	</mx:HBox>		
	<mx:Spacer width="100%"/>
	<mx:LinkButton label="{ResourceUtil.getInstance().getString('bbb.mainToolbar.helpBtn')}" click="onHelpButtonClicked()"/>
	<mx:Button label="{ResourceUtil.getInstance().getString('bbb.mainToolbar.logoutBtn')}" id="btnLogout" toolTip="{ResourceUtil.getInstance().getString('bbb.mainToolbar.logoutBtn.toolTip')}" right="10" click="doLogout()"/>		
	
</mx:ApplicationControlBar>
