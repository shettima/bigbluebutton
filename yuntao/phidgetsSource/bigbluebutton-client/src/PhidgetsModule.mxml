<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" 
	implements="org.bigbluebutton.common.IBigBlueButtonModule" 
	layout="absolute" width="400" height="300" 
	xmlns:maps="org.bigbluebutton.modules.phidgets.maps.*">
	
	<mx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			import org.bigbluebutton.main.events.CloseWindowEvent;
			import org.bigbluebutton.main.events.OpenWindowEvent;
			import org.bigbluebutton.modules.phidgets.views.Phidgets;
			import org.bigbluebutton.common.messaging.Router;
			
			private var _router:Router;			
			private var _moduleId:String = "PhidgetsModule";
			private var _moduleName:String = "Phidgets Module";			
			private var _attributes:Object;
			
			public var phidgetsWindow:Phidgets;
			private var globalDispatcher:Dispatcher;
			
			private function onCreationComplete():void {
				LogUtil.debug("PhidgetsModule Initialized");	
				globalDispatcher = new Dispatcher();
			}
			
			public function acceptRouter(router:Router):void{
				_router = router;
				
			}
		
			public function get router():Router{
				return _router;
			}
				
			public function get moduleId():String {
				return _moduleId;
			}
			
			public function get moduleName():String {
				return _moduleName;
			}
		
			public function get uri():String {
				if (_attributes.mode == "PLAYBACK") {										
					return _attributes.uri + "/" + _attributes.playbackRoom;
				} 
				
				return _attributes.uri + "/" + _attributes.room;
			}
			
			public function get username():String {
				return _attributes.username;
			}
			
			public function get connection():NetConnection {
				return _attributes.connection;
			}
			
			public function get mode():String {
				if (_attributes.mode == null) {					
					//_attributes.mode = "PLAYBACK"
					_attributes.mode = "LIVE"
					LogUtil.debug('Setting PhidgetsModule mode: ' + _attributes.mode);
				}
				LogUtil.debug('PhidgetsModule mode: ' + _attributes.mode);
				return _attributes.mode;
			}
						
			public function get userid():Number {
				return _attributes.userid as Number;
			}
			
			public function get role():String {
				return _attributes.userrole as String;
			}
			
			public function start(attributes:Object):void {	
				LogUtil.debug("phidgets attr: " + attributes.username);
				_attributes = attributes;
				
				phidgetsWindow = new Phidgets();
				phidgetsWindow.xPosition = 500;
				phidgetsWindow.yPosition = 500;
				
				var event:OpenWindowEvent = new OpenWindowEvent(OpenWindowEvent.OPEN_WINDOW_EVENT);
				event.window = phidgetsWindow;
				globalDispatcher.dispatchEvent(event);
			}
		
			public function stop():void {
				var event:CloseWindowEvent = new CloseWindowEvent(CloseWindowEvent.CLOSE_WINDOW_EVENT);
				event.window = phidgetsWindow;
				globalDispatcher.dispatchEvent(event);
			}
		]]>
	</mx:Script>
		
	<maps:ServoEventMap id="ServoEventMap" />
	<maps:InterfaceKitEventMap id="InterfaceEventMap" />
</mx:Module>
