<?xml version="1.0" encoding="utf-8"?>
<MDIWindow xmlns="flexlib.mdi.containers.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	creationComplete="init()" 
	implements="org.bigbluebutton.common.IBbbModuleWindow">
	
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.core.UIComponent;
		
			private var video:Video;
			private var ns:NetStream;
			private var videoHolder:UIComponent;
			private var stream:String;
			private var videoHeight:Number;
			private var videoWidth:Number;
			
			private var _xPosition:int;
			private var _yPosition:int;
			
			private function init():void{
				_xPosition = 400;
				_yPosition = 400;
				videoHolder = new UIComponent();
				videoHolder.addChild(video);
				this.addChild(videoHolder);
			}
			
			public function startVideo(connection:NetConnection, stream:String):void{
				ns = new NetStream(connection);
				ns.addEventListener( NetStatusEvent.NET_STATUS, onNetStatus );
				ns.addEventListener(AsyncErrorEvent.ASYNC_ERROR, onAsyncError);
				ns.client = this;
				ns.bufferTime = 0;
				ns.receiveVideo(true);
				ns.receiveAudio(false);
				
				setVideoResolution(stream);
				video = new Video(this.width, this.height);
				video.attachNetStream(ns);
				ns.play(stream);	
				
				this.width = video.width + 6;
				this.height = video.height + 29;
				this.stream = stream;
			}
			
			private function setVideoResolution(stream:String):void{
				var resString:String = stream.substr(0, 7);
				switch(resString){
					case "320x240":
						this.width = 320;
						this.height = 240;
						break;
					case "640x480":
						this.width = 640;
						this.height = 480;
						break;
				}
			}
			
			private function onAsyncError(e:AsyncErrorEvent):void{
				LogUtil.debug("VIdeoWindow::asyncerror " + e.toString());
			}
			
			public function onMetaData(info:Object):void{
				LogUtil.debug("metadata: width=" + info.width + " height=" + info.height);
				videoHolder.width = info.width;
				videoHolder.height = info.height;
			}
			
			public function onImageData(info:Object):void{
				Alert.show("dawhw");
			}
			
			public function get xPosition():int {
				return _xPosition;
			}
			
			public function get yPosition():int {
				return _yPosition;
			}
			
			public function set xPosition(x:int):void {
				_xPosition = x;
			}
			
			public function set yPosition(y:int):void {
				_yPosition = y;
			}	
			
			private function onNetStatus(e:NetStatusEvent):void{
				switch(e.info.code){
				case "NetStream.Publish.Start":
					LogUtil.debug("NetStream.Publish.Start for broadcast stream " + stream);
					break;
				case "NetStream.Play.UnpublishNotify":
					this.close();
					break;
				}
			}		
			
		]]>
	</mx:Script>
</MDIWindow>
