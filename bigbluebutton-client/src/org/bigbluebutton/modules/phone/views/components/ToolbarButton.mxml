<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton - http://www.bigbluebutton.org
  
  Copyright (c) 2008-2009 by respective authors (see below). All rights reserved.
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 3 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, If not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
--> 

<mx:Button xmlns:mx="http://www.adobe.com/2006/mxml"
	icon="{phoneIcon}" click="startPhone()"
	xmlns:mate="http://mate.asfusion.com/"
	toolTip="{ResourceUtil.getInstance().getString('bbb.toolbar.phone.toolTip')}">
	
	<mate:Listener type="{CallConnectedEvent.CALL_CONNECTED_EVENT}" method="handleCallConnectedEvent"/>
	<mate:Listener type="{CallDisconnectedEvent.CALL_DISCONNECTED_EVENT}" method="handleCallDisconnectedEvent"/>
	
	<mx:Script>
		<![CDATA[
			import org.bigbluebutton.modules.phone.events.CallDisconnectedEvent;
			import org.bigbluebutton.modules.phone.events.CallConnectedEvent;
			import org.bigbluebutton.modules.phone.events.JoinVoiceConferenceEvent;
			import org.bigbluebutton.modules.phone.views.assets.Images;
			import org.bigbluebutton.util.i18n.ResourceUtil;
			
			private var images:Images = new Images();
			private var localDispatcher:IEventDispatcher;
			 
			[Bindable] public var phoneIcon:Class = images.headset_icon;
			
			private function startPhone():void {
				localDispatcher.dispatchEvent(new JoinVoiceConferenceEvent());
			}
			
			public function setLocalDispatcher(dispatcher:IEventDispatcher):void {
				localDispatcher = dispatcher;
			} 
			
			private function handleCallConnectedEvent(event:CallConnectedEvent):void {
				this.enabled = false;
			}
			
			private function handleCallDisconnectedEvent(event:CallConnectedEvent):void {
				this.enabled = true;
			}
			
		]]>
	</mx:Script>
</mx:Button>
