<?xml version="1.0" encoding="utf-8"?>
<MDIWindow xmlns="flexlib.mdi.containers.*" 
	       xmlns:mx="http://www.adobe.com/2006/mxml" 
	       showCloseButton="false">

	<mx:Script>
		<![CDATA[
			
			import org.bigbluebutton.modules.desktopshare.model.vo.ImageVO;
			import org.bigbluebutton.modules.desktopshare.model.vo.*;
			import org.bigbluebutton.modules.desktopshare.view.DesktopShareWindowMediator;
			import mx.core.UIComponent;
			import flash.external.ExternalInterface;
		    import mx.controls.SWFLoader;
        	import mx.utils.Base64Decoder;
        	import flash.net.FileReference;
        	import org.bigbluebutton.modules.log.LogModuleFacade;
        	import flash.errors.EOFError;
        	

			public static const TITLE:String = "Desktop Share";
			public var timer:Timer;
			public var im:ImageVO = new ImageVO("");
			public var base64Decoder:Base64Decoder = new Base64Decoder();
			private var ratio:Number;
			public var ui_loader:Sprite;//UIComponent;// = new UIComponent();
			public var temp1:Canvas = new Canvas();
			public var temp2:Canvas = new Canvas();
			public var clip:MovieClip = new MovieClip();
			private var tileH:Number;
			private var tileW:Number;
			private var show_preview:Boolean;
			private var log : LogModuleFacade = LogModuleFacade.getInstance("LogModule");
			public var d : DisplayObject;// = new DisplayObject();
			public var n:int;
		
			public function startShare():void
		    {
		      	ExternalInterface.call("addFrame");
		    	this.share_Btn.enabled = false;
		    	this.unshare_Btn.enabled = true;
		    	im.isSharing = true;
		    	dispatchEvent(new Event(DesktopShareWindowMediator.NEW_IMAGE));
		    	//ratio = ExternalInterface.call("getResJS1");
		    }
			
			public function stopShare():void
			{
				ExternalInterface.call("removeFrame");
				this.share_Btn.enabled = true;
				this.unshare_Btn.enabled = false;
			}
			
			public function sendImage(e:TimerEvent):void
			{
				var s:String = ExternalInterface.call("getStringJS");
				im.imageString = s;
				dispatchEvent(new Event(DesktopShareWindowMediator.NEW_IMAGE));
			}
			public function showNewWindow(imagevo:ImageVO):void
			{
				if(this.im.isSharing)
				{
					this.height=75;
					this.width=220;
				}
				else
				{
					this.share_Btn.enabled=false;
					this.unshare_Btn.enabled=false;
				}
				
				
				
			}
			
			public function showNewImage(imagevo:ImageVO):void
			{
	
                tileH = imagevo.tileheight;
                tileW = imagevo.tilewidth;
              //  if(preview_box1.numChildren > 5)
              //  {
              //  for(var k:int = 0 ;k <= 3 ; k++)
              //  {
              //  	preview_box1.removeChildAt(k);
              //  }
              //  }
      			//if(n > 0) preview_box1.removeChildAt(n);
            	//if(preview_box1.getChildByName("temp1") && preview_box1.getChildByName("temp2"))
                //preview_box1.swapChildrenAt(0,1);
                //n=n+1;
                trace("whatever");
            	for(var i:int =0 ; i<6 ; i++)
            	{
            		for(var j:int=0; j<6 ; j++)
            		{
            			if(temp1.getChildByName("tile"+i+""+j))
                		temp1.removeChild(temp1.getChildByName("tile"+i+""+j));
                		
                		base64Decoder.reset();
                		if(imagevo.stringArray[i][j]!= null)
                		{
                		base64Decoder.decode(imagevo.stringArray[i][j]);
                		var ba:ByteArray = base64Decoder.drain();
						var ldr:Loader = new Loader();
                        ldr.loadBytes(ba);
                        
                        ui_loader = new UIComponent();
						ui_loader.addChild(ldr);
						
						ui_loader.name = "tile"+i+""+j;
						ui_loader.scaleX = hSlider.value/100;
						ui_loader.scaleY = hSlider.value/100;
						ui_loader.x = i * tileW * hSlider.value/100;
						ui_loader.y = j * tileH * hSlider.value/100;
						
						
                   		//temp1.addChildAt(ui_loader, 0);
                   		//temp1.name = "temp1";
                   		temp1.addChildAt(ui_loader,0);
                   		//temp2.name = "temp2";
                   		//temp2.addChildAt(ui_loader, 0);
                   		//temp1.setVisible(false);
                   		preview_box1.addChildAt(temp1,0);
                   		
                   		}
                        				
            		}
            		preview_box1.addChildAt(temp1,0);
            	}
            	//preview_box1.addChildAt(temp1,0);
            	//preview_box1.removeAllChildren();
            	preview_box1.addChildAt(temp1,0);
            	//temp2.data = temp1.data;
            	//temp2.clipContent = temp1.clipContent;
            	//temp2.document.temp1.document;
            	//preview_box1.removeAllChildren();
            	//trace(n);
      //      	preview_box1.addChild(temp1);
      //      	trace(preview_box1.getChildIndex(temp1));
            	//n=n+1;//var temp3:DisplayObject = preview_box1.getChildByName("temp1");
            	
     //       	preview_box1.addChild(temp2);
     //       	trace(preview_box1.getChildIndex(temp2));
            	
            	//temp2.data
            	//preview_box1.removeAllChildren();
            	//preview_box1.addChildAt(temp1,0);
            	//preview_box1.
            	//if(preview_box1.getChildByName("temp1"))
                //{
                	//preview_box1.removeAllChildren();//preview_box1.removeChild(preview_box1.getChildByName("temp1"));
                	//trace(preview_box1.numChildren);
                //}
                //if(preview_box1.getChildByName("temp1"))
                //preview_box1.removeChild(preview_box1.getChildByName("temp1"));
            	//preview_box1.addChild(temp2);
            	//preview_box1.addChildAt(temp1,0);
            	
            	//trace(preview_box1.numChildren+"   "+preview_box1.getChildIndex(temp1)+
            	//"    "+preview_box1.getChildIndex(temp2));
            	//preview_box1.addChild(temp1);
            	//preview_box1.addChildAt(temp2,n);
            	//n++;
            /*///////////////////////////////////////////////////////////////// 	
            	var bytearray :ByteArray = new ByteArray();
            
            	if (temp1 != null)
            	bytearray.writeObject(temp1)
            	else
            	trace("temp1 length: "+ bytearray.length);
            	bytearray.position = 0;
            	try{
            		
            		  temp2 = bytearray.readObject() as Canvas;
            		
            	}catch(e:EOFError){
            		trace(e);
            	}
            	if(temp2 != null)
            	preview_box1.addChildAt(temp2,0);
            	else
            	trace("temp2 is null");
           */////////////////////////////////////////////////////////////////// 
           /////////////////////////////////////////////////////////////////	
            	//var buffer:BitmapData = new BitmapData(800,600);
				//buffer.draw(temp1);
				//var b :ByteArray = new ByteArray();
				//buffer.getPixels(buffer.rect);
				//var bmp:Bitmap = new Bitmap(buffer);
			
				//var l:Loader = new Loader();
                //l.loadBytes(b);
                //temp2.addChildAt(l,0);
                //var sprite:Sprite = new Sprite();
                //sprite.
                //sprite.addChild(bmp);
                //preview_box1.addChildAt(sprite,0);
           ///////////////////////////////////////////////////////////////////////////
                   
           	
            }
			
		    public function changeSize():void
		    {
				//for(var i:int =0 ; i<6 ; i++)
            	//{
            	//	for(var j:int=0; j<6 ; j++)
            	//	{
				//		preview_box1.getChildByName("tile"+i+""+j).scaleX = hSlider.value/100;
				//		preview_box1.getChildByName("tile"+i+""+j).scaleY = hSlider.value/100;
				//		preview_box1.getChildByName("tile"+i+""+j).x = i * tileW * hSlider.value/100;
				//		preview_box1.getChildByName("tile"+i+""+j).y = j * tileH * hSlider.value/100;
            	//	}
            	//}
				temp1.scaleX = hSlider.value/100;
				temp1.scaleY = hSlider.value/100;
			}
			
			public function download():void
			{		
               	//var request:URLRequest = new URLRequest("http://www.technoexpert.ca/flash/ScreenShot.jar");
				//navigateToURL(request,"_blank");
			}
			
			public function fadeIn():void
			{
				var f:Fade = new Fade();
				f.alphaFrom = 0;
				f.alphaTo = 1;
				f.duration = 300;
			}     

		]]>
	</mx:Script>
			
	
	<mx:Fade id="fadeOut" duration="300" alphaFrom="1.0" alphaTo="0.0"/>
    <!--<mx:Fade id="fadeIn" duration="300" alphaFrom="0.0" alphaTo="1.0"/>-->
	<mx:Canvas id="preview_box1" width="100%" height="100%"
	 left="1" top="1" right="1" bottom="1" horizontalScrollPolicy="on" 
    	verticalScrollPolicy="on" 
    	hideEffect="{fadeOut}" showEffect="fadeIn()">
    </mx:Canvas>
    
   <!-- <mx:TextArea id="strJS" width="570" height="100"/>
    <mx:TextArea id="strRed5" width="570" height="100"/>-->
    <mx:ApplicationControlBar>
    	<mx:Button id="share_Btn" label="Start Sharing" click="startShare()"/>
    	<mx:Button id="unshare_Btn" label="Stop Sharing" click="stopShare()"/>
    	<mx:Button id="dwn" label="Download" click="download()" enabled="false"/>
    	<mx:HSlider id="hSlider" minimum="0" maximum="100" value="100" 
            dataTipPlacement="bottom" 
            tickColor="black" 
            snapInterval="1" tickInterval="10" 
            labels="['0%','100%']" 
            allowTrackClick="true" 
            liveDragging="true"
            change="changeSize();"/>
    	<mx:Label id="wait" text="" fontWeight="bold"/>
   	</mx:ApplicationControlBar>
    
</MDIWindow>
