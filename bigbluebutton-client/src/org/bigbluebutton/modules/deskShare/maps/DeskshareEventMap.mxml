<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton - http://www.bigbluebutton.org
  
  Copyright (c) 2008-2009 by respective authors (see below). All rights reserved.
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 3 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, If not, see <http://www.gnu.org/licenses/>.
  
  Authors: Denis Zgonjanin <me.snap@gmail.com>
           Richard Alam <ritzalam@gmail.com>  
  $Id: $
--> 

<EventMap xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns="http://mate.asfusion.com/">

	<mx:Script>
		<![CDATA[
			import org.bigbluebutton.modules.deskShare.events.StartedViewingEvent;
			import org.bigbluebutton.main.events.MadePresenterEvent;
			import org.bigbluebutton.modules.deskShare.managers.DeskshareManager;
			import org.bigbluebutton.modules.deskShare.events.ViewWindowEvent;
			import org.bigbluebutton.modules.deskShare.events.ShareWindowEvent;
			import org.bigbluebutton.modules.deskShare.events.ViewStreamEvent;
			import mx.events.FlexEvent;
			import org.bigbluebutton.modules.deskShare.events.StreamEvent;
			import org.bigbluebutton.modules.deskShare.events.ShareEvent;
			import org.bigbluebutton.modules.deskShare.events.ModuleEvent;
		]]>
	</mx:Script>
	<EventHandlers type="{FlexEvent.PREINITIALIZE}">
		<!--
		The FlexEvent.PREINITIALIZE event is a good place for creating and initializing managers.
		-->
		<ObjectBuilder generator="{DeskshareManager}"/>
	</EventHandlers>
		
	<EventHandlers type="{ShareEvent.START_SHARING}">
		<MethodInvoker generator="{DeskshareManager}" method="handleStartSharingEvent"/>
	</EventHandlers>
	
	<EventHandlers type="{MadePresenterEvent.SWITCH_TO_PRESENTER_MODE}">
		<MethodInvoker generator="{DeskshareManager}" method="handleMadePresenterEvent" arguments="{event}"/>
	</EventHandlers>
	
	<EventHandlers type="{MadePresenterEvent.SWITCH_TO_VIEWER_MODE}">
		<MethodInvoker generator="{DeskshareManager}" method="handleMadeViewerEvent" arguments="{event}"/>
	</EventHandlers>
		
	<!--EventHandlers type="{MadePresenterEvent.BECOME_PRESENTER}">
		<MethodInvoker generator="{DeskshareManager}" method="handleMadePresenterEvent" arguments="{event}"/>
	</EventHandlers-->
	
	<EventHandlers type="{StreamEvent.START}">
		<MethodInvoker generator="{DeskshareManager}" 
			method="handleStreamStartedEvent" arguments="{[event.videoWidth, event.videoHeight]}"/>
	</EventHandlers>

	<EventHandlers type="{StreamEvent.STOP}" >
		<MethodInvoker generator="{DeskshareManager}" method="handleStreamStoppedEvent"/>
	</EventHandlers>
		
	<EventHandlers type="{ViewStreamEvent.START}">
		<MethodInvoker generator="{DeskshareManager}" 
						method="handleStreamStartEvent" arguments="{[event.videoWidth, event.videoHeight]}"/>
	</EventHandlers>

	<EventHandlers type="{ShareWindowEvent.CLOSE}">		
		<MethodInvoker generator="{DeskshareManager}" method="handleShareWindowCloseEvent"/>
	</EventHandlers>
	
	<EventHandlers type="{StartedViewingEvent.STARTED_VIEWING_EVENT}">		
		<MethodInvoker generator="{DeskshareManager}" method="handleStartedViewingEvent"/>
	</EventHandlers>
		
	<EventHandlers type="{ViewWindowEvent.CLOSE}">
		<MethodInvoker generator="{DeskshareManager}" 	method="handleViewWindowCloseEvent"/>
	</EventHandlers>
			
	<EventHandlers type="{ModuleEvent.STOP}">		
		<MethodInvoker generator="{DeskshareManager}" method="handleStopModuleEvent"/>
	</EventHandlers>

	<EventHandlers type="{ModuleEvent.START}">		
		<MethodInvoker generator="{DeskshareManager}" method="handleStartModuleEvent" arguments="{event.module}"/>
	</EventHandlers>
	
</EventMap>
