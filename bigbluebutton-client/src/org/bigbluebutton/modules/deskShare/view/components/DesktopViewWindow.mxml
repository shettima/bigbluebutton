<?xml version="1.0" encoding="utf-8"?>
<MDIWindow xmlns="flexlib.mdi.containers.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="400" height="300"
	creationComplete="onCreationComplete()"
	implements="org.bigbluebutton.common.IBbbModuleWindow"
	xmlns:mate="http://mate.asfusion.com/"
	title="Desktop Sharing">
	
	<mx:Script>
		<![CDATA[
			import mx.events.ResizeEvent;
			import mx.controls.Alert;
			import org.bigbluebutton.modules.deskShare.events.StopViewingEvent;
			import mx.core.UIComponent;
			import mx.events.SliderEvent;
			
			private var video:Video;
			private var ns:NetStream;
			private var videoHolder:UIComponent;
			private var stream:String;
			private var videoHeight:Number;
			private var videoWidth:Number;
			
			private var _xPosition:int = 675;
			private var _yPosition:int = 310;
			
			private function onCreationComplete():void{
				videoHolder = new UIComponent();
				videoHolder.addChild(video);
				this.addChild(videoHolder);
				videoHolder.percentWidth = 100;
				videoHolder.percentHeight = 100;
				videoHolder.addEventListener(ResizeEvent.RESIZE, onResize);
			}
			
			public function startVideo(connection:NetConnection, stream:String, width:Number, height:Number):void{
				this.videoWidth = width;
				this.videoHeight = height;
				
				ns = new NetStream(connection);
				ns.addEventListener( NetStatusEvent.NET_STATUS, onNetStatus );
				ns.addEventListener(AsyncErrorEvent.ASYNC_ERROR, onAsyncError);
				ns.client = this;
				ns.bufferTime = 0;
				ns.receiveVideo(true);
				ns.receiveAudio(false);
				
				video = new Video(width, height);
				video.width = width;
				video.height = height;
				video.attachNetStream(ns);
				ns.play(stream);	
				
				this.width = video.width + 6;
				this.height = video.height + 29;
				this.stream = stream;
			}
			
			private function onAsyncError(e:AsyncErrorEvent):void{
				LogUtil.debug("VIdeoWindow::asyncerror " + e.toString());
			}
			
			private function onNetStatus(e:NetStatusEvent):void{
				switch(e.info.code){
				case "NetStream.Publish.Start":
					LogUtil.debug("NetStream.Publish.Start for broadcast stream " + stream);
					break;
				case "NetStream.Play.UnpublishNotify":
					this.close();
					break;
				}
			}		
			
			public function get xPosition():int {
				return _xPosition;
			}
			
			public function get yPosition():int {
				return _yPosition;
			}
			
			public function set xPosition(x:int):void {
				_xPosition = x;
			}
			
			public function set yPosition(y:int):void {
				_yPosition = y;
			}	
			
			public function onResize(e:ResizeEvent):void{
				//video.width = videoHolder.width;
				//video.height = videoHolder.height;
			}
			
			private function closeWindow(e:StopViewingEvent):void{
				this.close();
			}
			
			private function onZoomChange(e:SliderEvent):void{
				video.width = zoomSlider.value/100 * videoWidth;
				video.height = zoomSlider.value/100 * videoHeight;
				videoHolder.width = zoomSlider.value/100 * videoWidth;
				videoHolder.height = zoomSlider.value/100 * videoHeight;
			}
		]]>
	</mx:Script>
	
	<mate:Listener type="{StopViewingEvent.STOP_VIEWING}" method="closeWindow" />
	
	<mx:ControlBar id="bottomBar">
		<mx:HSlider id="zoomSlider" value="100" minimum="50" maximum="150" change="onZoomChange(event)" labels="{['50%','150%']}" labelOffset="0" />
		<mx:Label id="lblStatus" />
	</mx:ControlBar>
</MDIWindow>
