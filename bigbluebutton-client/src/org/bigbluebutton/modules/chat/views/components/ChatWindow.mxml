<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton - http://www.bigbluebutton.org
  
  Copyright (c) 2008-2009 by respective authors (see below). All rights reserved.
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 3 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; If not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
--> 

<MDIWindow xmlns="flexlib.mdi.containers.*" 
	       xmlns:mx="http://www.adobe.com/2006/mxml" 
	       xmlns:chat="org.bigbluebutton.modules.chat.views.components.*"
	       width="590" height="300" showCloseButton="false"
	       implements="org.bigbluebutton.common.IBbbModuleWindow" 
	       creationComplete="onCreationComplete()"
	       xmlns:components="org.bigbluebutton.modules.chat.view.components.*" xmlns:mate="http://mate.asfusion.com/">
	
	<mx:Script>
		<![CDATA[
			import org.bigbluebutton.main.events.ResetLayoutEvent;
			import mx.controls.Alert;
			import flexlib.mdi.events.MDIWindowEvent;
			import mx.core.Application;
			
			private var _xPosition:int;
			private var _yPosition:int;
			private var localDispatcher:IEventDispatcher;
			
			//The following code block is to deal with a bug in FLexLib with MDI windows not responding well to being maximized
			private var savedWindowWidth:Number;
			private var savedWindowHeight:Number;
			private var savedX:Number;
			private var savedY:Number;
			private var isMaximized:Boolean = false;
			override public function maximize():void{
				if (!isMaximized){
					savedWindowHeight = this.height;
					savedWindowWidth = this.width;
					savedX = this.x;
					savedY = this.y;
                	dispatchEvent(new MDIWindowEvent(MDIWindowEvent.MAXIMIZE, this));
                	isMaximized = true;
				} else{
					this.width = savedWindowWidth;
					this.height = savedWindowHeight;
					this.x = savedX;
					this.y = savedY;
					isMaximized = false;
					//dispatchEvent(new MDIWindowEvent(MDIWindowEvent.RESTORE, this));
				}	
			}
			
			private var dispState:String;
			
			public function get xPosition():int {
				return _xPosition;
			}
			
			public function get yPosition():int {
				return _yPosition;
			}
			
			public function set xPosition(x:int):void {
				_xPosition = x;
			}
			
			public function set yPosition(y:int):void {
				_yPosition = y;
			}       
			
			public function setLocalDispatcher(dispatcher:IEventDispatcher):void {
				localDispatcher = dispatcher;
			}   
			
			private function onCreationComplete():void {
				chatView.localDispatcher = localDispatcher;
				
				/* Set up full screen handler. */
				Application.application.stage.addEventListener(FullScreenEvent.FULL_SCREEN, fullScreenHandler);
				dispState = Application.application.stage.displayState;
			}
			
			private function fullScreenHandler(evt:FullScreenEvent):void {
				dispState = Application.application.stage.displayState + " (fullScreen=" + evt.fullScreen.toString() + ")";
				if (evt.fullScreen) {
					chatView.txtMsg.text = "Chat not enabled in full screen mode";
					chatView.txtMsg.enabled = false;
				} else {
					chatView.txtMsg.text = "";
					chatView.txtMsg.enabled = true;
				}
			}			  
			
		]]>
	</mx:Script>
	
	<chat:ChatView id="chatView"/>
</MDIWindow>
