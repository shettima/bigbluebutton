<?xml version="1.0" encoding="utf-8"?>
<MDIWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
			xmlns="flexlib.mdi.containers.*"
			implements="org.bigbluebutton.common.IBbbModuleWindow"
			creationComplete="init()">

	<mx:Script>
		<![CDATA[
			import org.bigbluebutton.modules.listeners.ListenersModuleConstants;
			import mx.core.Application;
			import org.bigbluebutton.modules.viewers.ViewersFacade;
			import org.bigbluebutton.modules.viewers.model.business.Conference;
			import org.bigbluebutton.common.Role;
			import org.bigbluebutton.common.Images;
			import mx.events.DragEvent;
			import flash.events.MouseEvent;
			import mx.core.DragSource;
			import mx.managers.DragManager;
			import mx.controls.Label;
			import mx.collections.ArrayCollection;
			import mx.controls.Image;	
			
			public static const TITLE:String = "Listeners";	
			private var images:Images = new Images();
			
			private var _xPosition:int;
			private var _yPosition:int;
			
			[Bindable] public var dropTargetIcon : Object = images.door_in;
			
			[Bindable] private var muteAllIcon : Class = images.sound_mute;
			[Bindable] private var unmuteAllIcon : Class = images.sound_none;
			[Bindable] private var role:String;
			
			public var userid:Number;
			public var isMuted:Boolean;
			
			//Full screen?
			private var dispState:String;
			
			private function init():void{
//				var conf:Conference = ViewersFacade.getInstance().retrieveMediator(Conference.NAME) as Conference;
//				role = conf.me.role;
				
				//Initialize full screen handler
				Application.application.stage.addEventListener(FullScreenEvent.FULL_SCREEN, fullScreenHandler);
				dispState = Application.application.stage.displayState;
			}
			
			private function fullScreenHandler(evt:FullScreenEvent):void {
				dispState = Application.application.stage.displayState + " (fullScreen=" + evt.fullScreen.toString() + ")";
				if (evt.fullScreen) {
					//Notify user that the keyboard is not working
					this.maximizeRestoreBtn.visible = false;
					if (this.maximized){
						this.restore();
					}
				} else{
					this.maximizeRestoreBtn.visible = true;
				}
			}
			
			public function dragEnterHandler(event:DragEvent):void
	   		{
	   			var dropTarget : Image = event.currentTarget as Image;
	   			if (event.dragSource.hasFormat('userid'))
	   		
	   			DragManager.acceptDragDrop(dropTarget);
	   		}
	   	
	   		public function dragDropHandler(event:DragEvent):void
	   		{
	   			dropTargetIcon = images.door_open;
	   			
   				userid = Number(event.dragSource.dataForFormat('userid'));
				dispatchEvent(new Event(ListenersModuleConstants.EJECT_USER));
	   		
	   		}

			public function get xPosition():int {
				return _xPosition;
			}
			
			public function get yPosition():int {
				return _yPosition;
			}
			
			public function set xPosition(x:int):void {
				_xPosition = x;
			}
			
			public function set yPosition(y:int):void {
				_yPosition = y;
			}
	   		
		]]>
	</mx:Script>
	
    	<!--mx:TileList id="participantsList" height="100%" width="100%" 
        	itemRenderer="org.bigbluebutton.modules.listeners.view.components.ListenerItem"
            maxColumns="1" rowHeight="25" columnWidth="200" 
            dataProvider="{meetMeRoom.dpParticipants}">
    	</mx:TileList-->				
    	
    	<mx:ControlBar width="100%">
    	   <mx:Button id="muteAllIconImg" icon="{muteAllIcon}" 
    	   			toolTip="Mute All" click="dispatchEvent(new Event(ListenersModuleConstants.MUTE_ALL))"
    	   			visible="{role == Role.MODERATOR}"/> 
    	   <mx:Button id="unmuteAllIconImg" icon="{unmuteAllIcon}" 
    	   			toolTip="Unmute All" click="dispatchEvent(new Event(ListenersModuleConstants.UNMUTE_ALL))"
    	   			visible="{role == Role.MODERATOR}"/> 
     	   <mx:Spacer width="100%"/>
    		<mx:Image id="ejectUserDropTarget" source="{dropTargetIcon}" 
    	   			toolTip="Drop user here to eject." visible="{role == Role.MODERATOR}"
    	   			dragEnter="dragEnterHandler(event)" dragDrop="dragDropHandler(event)"/>  			
    	</mx:ControlBar>

</MDIWindow>
