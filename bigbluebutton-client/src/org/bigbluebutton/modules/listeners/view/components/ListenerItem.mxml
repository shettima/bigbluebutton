<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton - http://www.bigbluebutton.org
  
  Copyright (c) 2008-2009 by respective authors (see below). All rights reserved.
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 3 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, If not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
--> 

<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" 
	horizontalScrollPolicy="off" creationComplete="displayMuteCheckBox()">
	<!--mx:Style>
        mx.CheckBox {
            /* Unselected icons */
            upIcon: Embed(source="../assets/images/lock_open.png");
            /* Selected icons */
            selectedUpIcon: Embed(source="../assets/images/lock.png");
        }
    </mx:Style-->
    
   <mx:Script>
   	<![CDATA[
   		import org.bigbluebutton.modules.listeners.view.events.LockMuteEvent;
   		import org.bigbluebutton.modules.listeners.view.events.ListenerSelectedEvent;
   		import org.bigbluebutton.modules.listeners.view.events.UserTalkEvent;
   		import org.bigbluebutton.modules.listeners.view.events.UserMuteEvent;
   		import org.bigbluebutton.modules.listeners.ListenersModuleConstants;
   		import org.bigbluebutton.modules.listeners.view.components.Images;
   		import org.bigbluebutton.util.i18n.ResourceUtil;
   		import mx.controls.Image;
   		import flash.events.MouseEvent;
   		import mx.controls.Label;
   		import mx.collections.ArrayCollection;
   		import mx.controls.TileList;
			
   		private var images:Images = new Images();
   		
   		[Bindable] private var lockedIcon:Class = images.locked;
   		[Bindable] private var unlockedIcon:Class = images.unlocked;
   		[Bindable] private var muteIcon:Class = images.sound_mute;
   		[Bindable] private var unmuteIcon:Class = images.sound_none;
   		[Bindable] private var talkIcon:Object = images.sound;   		
   		[Bindable] private var ejectIcon:Object = images.eject_user;  		  		
   		[Bindable] private var statusTooltip : String = "";
   		[Bindable] private var ejectTooltip : String = ResourceUtil.getInstance().getString('bbb.listeners.ejectTooltip');
   				   			   	
       public function muteUser():void {
       		var e:UserMuteEvent = new UserMuteEvent(ListenersModuleConstants.MUTE_USER_EVENT);
       		e.userid = data.userid;
       		e.mute = !data.muted; // toggle muted
       		dispatchEvent(e);
       }	
       
       public function lockMuteUser():void {
       		var e:LockMuteEvent = new LockMuteEvent(ListenersModuleConstants.LOCK_MUTE_USER);
       		e.userid = data.userid;
       		e.lock = muteCB.selected;
       		dispatchEvent(e);
       }
       
       private function showMuteButton():void {
       		if (data.moderator) {
        		muteBtn.visible = true;
       			muteCB.visible = true;      			
       		} else {
       			muteBtn.visible = false;
       			muteBtn.visible = false;
       			muteCB.visible = false;
       		}       			
       }
       
       private function hideMuteButton():void {
       			muteBtn.visible = false;
       			muteCB.visible = false;
       }
       
       private function displayMuteCheckBox():void {
       		if (data.moderator) {		
				currentState = "dispMuteCheckBox";		
			} else {
				currentState = "";
			}
       }
   	]]>
   </mx:Script>
   
   <mx:states>
        <mx:State name="dispMuteCheckBox">      
            <mx:AddChild relativeTo="{muteBtn}" position="before">
            	<!--mx:Button id="muteCB" width="18" height="16" toggle="true" visible="true" enabled="{data.moderator}" icon="{data.locked ? lockedIcon : unlockedIcon}" click="lockMuteUser()"/-->
                <mx:CheckBox id="muteCB" visible="{data.moderator}" selected="{data.locked}" toolTip="Keep muted/unmuted" click="lockMuteUser()">
					<mx:upIcon>@Embed(source="../assets/images/unlock.png")</mx:upIcon>
     				<mx:overIcon>@Embed(source="../assets/images/unlock.png")</mx:overIcon>
     				<mx:downIcon>@Embed(source="../assets/images/unlock.png")</mx:downIcon>
     				<mx:selectedUpIcon>@Embed(source="../assets/images/lock.png")</mx:selectedUpIcon>
     				<mx:selectedOverIcon>@Embed(source="../assets/images/lock.png")</mx:selectedOverIcon>
     				<mx:selectedDownIcon>@Embed(source="../assets/images/lock.png")</mx:selectedDownIcon>                	
                </mx:CheckBox>
            </mx:AddChild>
        </mx:State>		
	</mx:states>
	   	
   	<mx:Button id="muteBtn" width="18" height="16" toggle="true" visible="true" enabled="{data.moderator}" icon="{data.muted ? muteIcon : unmuteIcon}" click="muteUser()"/>
	<mx:Label id="nameLabel" textAlign="left" text="{data.callerName}" width="147" 
		toolTip="{ResourceUtil.getInstance().getString('bbb.listenerItem.nameLbl.toolTip')}"/>
	<mx:Image id="talkImg" source="{talkIcon}" visible="{data.talking}" toolTip="{ResourceUtil.getInstance().getString('bbb.listenerItem.talkImg.toolTip')}"/>
</mx:HBox>
