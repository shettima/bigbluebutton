<?xml version="1.0" encoding="utf-8"?>
<cam:MDIWindow xmlns:mx="http://www.adobe.com/2006/mxml"
					  xmlns:cam="flexlib.mdi.containers.*"
					  xmlns:util="org.bigbluebutton.modules.video.view.components.*"
					  xmlns:monitor="org.bigbluebutton.modules.video.view.monitor.*"
					  resizable="false" width="326" height="312" 
					  implements="org.bigbluebutton.common.IBbbModuleWindow"
					  creationComplete="startBroadcasting()">
	<mx:Script>
		<![CDATA[
			import org.bigbluebutton.modules.video.view.components.Images;
			import org.bigbluebutton.modules.video.model.vo.BroadcastMedia;
					
			import flash.events.*;
			import mx.managers.PopUpManager;
			import mx.controls.*;
			import mx.binding.utils.BindingUtils;		
			import mx.events.CloseEvent;            
            import mx.containers.TitleWindow;
            import flash.geom.Point;			

			public static const BROADCAST_STREAM:String = "BROADCAST_STREAM";
			public static const STOP_BROADCAST_STREAM:String = "STOP_BROADCAST_STREAM";
			public static const START_DEVICES:String = "START_DEVICES";
			public static const STOP_DEVICES:String = "STOP_DEVICES";
			public static const CLOSE:String = "Close MyCamera Window";
			public static const CLOSE_CLICKED:String = "Close Clicked";
			public static const OPEN_SETTINGS:String = "Open Settings";
		
			private var _xPosition:int;
			private var _yPosition:int;


								
			private var images:Images = new Images();
			//public var settingsWindow : SettingsWindow;
			
			[Bindable]public var media:BroadcastMedia;
		    [Bindable] private var serverLogo : Class = images.red5_img;
			
            public override function close(event:MouseEvent = null):void 
            { 
                 //dispatchEvent(new Event(MyCameraWindowMediator.CLOSE_CLICKED));
                 super.close(event); 
            } 
/*		
			private function openSettingsWindow() : void
			{
                settingsWindow = SettingsWindow(PopUpManager.createPopUp( this, SettingsWindow, false));				
				settingsWindow.media = media;
				//dispatchEvent(new Event(MyCameraWindowMediator.OPEN_SETTINGS));
				
				var point1:Point = new Point();
                // Calculate position of TitleWindow in Application's coordinates. 
                point1.x = monDisplay.x;
                point1.y = monDisplay.y;                
                point1 = monDisplay.localToGlobal(point1);
                settingsWindow.x = point1.x + 25;
                settingsWindow.y = point1.y + 25;
                
                BindingUtils.bindSetter(handleBroadcasting, media, "broadcasting");
                BindingUtils.bindSetter(handleDeviceStarted, media, "deviceStarted");
            }	
*/            
            private function handleDeviceStarted(deviceStarted : Boolean) : void
            {
            	if (deviceStarted) {
//            		settingsBtn.visible = false;            		
            	}
            }
            
			public function startBroadcasting():void
			{
				dispatchEvent(new Event(BROADCAST_STREAM));
			}       
			
			public function get xPosition():int {
				return _xPosition;
			}
			
			public function get yPosition():int {
				return _yPosition;
			}
			
			public function set xPosition(x:int):void {
				_xPosition = x;
			}
			
			public function set yPosition(y:int):void {
				_yPosition = y;
			}

		]]>
	</mx:Script>
		<mx:Canvas id="monDisplay" width="320" height="240"
				backgroundColor="0xFFFFFF" borderStyle="solid" borderColor="0xD0D0D0"
				paddingBottom="0" cornerRadius="2">
			<util:VideoContainer id="localVideo" height="100%" width="100%"/>
		</mx:Canvas>
	<!--mx:ControlBar width="100%">
    	  <mx:Button id="settingsBtn" icon="{settingsIcon}" visible="{ ! media.deviceStarted}"
    	   			width="20" height="20" click="openSettingsWindow()"
    	   			toolTip="Settings"/>    
    	   <mx:Spacer width="100%"/>
    	  <mx:Button id="startDevBtn" icon="{media.deviceStarted ? stopIcon : startIcon}" 
    	  			visible = "{(media.video.settings.cameraIndex > 0) || (media.audio.settings.micIndex > 0)}"
					enabled = "{! media.broadcasting}"
					click="dispatchEvent(new Event(MyCameraWindowMediator.START_STOP_DEVICES))"
    	   			width="20" height="20"
    	   			toolTip="{media.deviceStarted ? 'Stop devices' : 'Start devices'}"/>     	   						
    	  <mx:Button id="transmitBtn" icon="{transmitIcon}" 
    	  			click="dispatchEvent(new Event(MyCameraWindowMediator.RECORD_STREAM))"
					visible="{ media.deviceStarted }"
    	   			width="20" height="20" 
    	   			toolTip="Start broadcasting"/>		
	</mx:ControlBar-->
</cam:MDIWindow>
