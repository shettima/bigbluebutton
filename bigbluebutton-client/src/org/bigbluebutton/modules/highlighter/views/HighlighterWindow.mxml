<?xml version="1.0" encoding="utf-8"?>
<MDIWindow xmlns="flexlib.mdi.containers.*" 
		   xmlns:mx="http://www.adobe.com/2006/mxml"
		   xmlns:mate="http://mate.asfusion.com/"
		   implements="org.bigbluebutton.common.IBbbModuleWindow" 
		   width="400" height="300" xmlns:views="org.bigbluebutton.modules.highlighter.views.*"
		   title="Whiteboard">
	
	<mx:Script>
		<![CDATA[
			import org.bigbluebutton.modules.highlighter.events.HighlighterDrawEvent;
			import org.bigbluebutton.common.Images;
			import org.bigbluebutton.modules.highlighter.business.shapes.DrawObject;
			
			private var images:Images = new Images();
			[Bindable] private var square_icon:Class = images.square_icon;
			[Bindable] private var pencil_icon:Class = images.pencil_icon;
			[Bindable] private var undo_icon:Class = images.undo_icon;
			[Bindable] private var circle_icon:Class = images.circle_icon;
			[Bindable] private var delete_icon:Class = images.delete_icon;
			
			private var _xPosition:int = 675;
			private var _yPosition:int = 310;
			
			public function get xPosition():int {
				return _xPosition;
			}
			
			public function get yPosition():int {
				return _yPosition;
			}
			
			public function set xPosition(x:int):void {
				_xPosition = x;
			}
			
			public function set yPosition(y:int):void {
				_yPosition = y;
			}
			
			public function get defaultWidth():int{
				return this.width;
			}
			
			public function get defaultHeight():int{
				return this.height;
			}
			
			public function set defaultHeight(height:int):void{
				this.height = height;
			}
			
			public function set defaultWidth(width:int):void{
				this.width = width;
			}
			
			public function resetWidthAndHeight():void{/* do nothing */}
			
			/**
			 * Sets the type of shape we're drawing (pencil, rectangle, etc...) 
			 * @param s The type
			 * 
			 */		
			protected function setShape(s:String):void{
				canvas.setShape(s);
			}
			
			/**
			 * Sets the color 
			 * @param e event containing the color (e.target.selectedColor)
			 * 
			 */		
			protected function changeColor(e:Event):void{
				canvas.changeColor(e);
			}
			
			/**
			 * Sets the thickness 
			 * @param e event containing the thickness (e.target.value)
			 * 
			 */		
			protected function changeThickness(e:Event):void{
				canvas.changeThickness(e);
			}
		]]>
	</mx:Script>
	
	<views:HighlighterCanvas id="canvas" width="100%" height="100%" />
	
	<mx:ApplicationControlBar width="100%" height="10%">
		<mx:Button width="20" height="20"  id="btnPenc" click="setShape(DrawObject.PENCIL)"  icon="{pencil_icon}" />
		<mx:Button width="20" height="20" id="btnRect" click="setShape(DrawObject.RECTANGLE)" icon="{square_icon}"/>
		<mx:Button width="20" height="20" id="btnEllip" click="setShape(DrawObject.ELLIPSE)" icon="{circle_icon}"/>
		<mx:Button width="20" height="20" id="btnClear" click="dispatchEvent(new HighlighterDrawEvent(HighlighterDrawEvent.CLEAR_BOARD))" icon="{delete_icon}" />
		<mx:Button width="20" height="20" id="btnUndo" click="dispatchEvent(new HighlighterDrawEvent(HighlighterDrawEvent.UNDO_SHAPE))" icon="{undo_icon}" />
		<mx:ColorPicker change="changeColor(event)" id="cpik"/>
		<mx:HSlider width="50" id="sld" change="changeThickness(event)"/>
	</mx:ApplicationControlBar>
</MDIWindow>
